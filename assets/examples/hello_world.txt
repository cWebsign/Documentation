#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#include &lt;stdlib.h&gt;

#include &lt;str.h&gt;
#include &lt;Net/web.h&gt;

String IP;
void err_n_exit(const char *msg) { printf("%s\n", msg); exit(0); }

void LayoutInit(cWS *web, cWR *request, WebRoute *route, int socket) {
	printf("Constructing Template....\n");
	route->CSS = (CSS *[]){
        &(CSS){ .Class = "body", .Data = (char *[]){
            "background-color: #000",
            NULL
	    }
    };

	route->Controls = (Control *[]){
        &(Control){ .Tag = BODY_TAG, .SubControls = (void *[]){
            &(Control){ .Tag = P_TAG, .Text = "Hello World" },
            NULL
        }},
        NULL
    };

    int chk = ConstructTemplate(route);
	if(chk < 1)
		printf("[ x ] Error\n");
}

void IndexHandler(cWS *web, cWR *r, WebRoute *route, int socket) {
	Map new_headers = NewMap();
    new_headers.Append(&new_headers, "Content-Type", "text/html; charset=UTF-8");
    new_headers.Append(&new_headers, "Connection", "close");

	SendResponse(web, socket, OK, new_headers, ((Map){}), route->Template);
}

int main() {
	IP = NewString("");
	cWS *api = StartWebServer(IP, 80, 0);
	if(!api)
		err_n_exit("[ x ] Error, Unable to start web server....!\n");

	api->CFG.Err404 = "Err404\n\n";
	AddRoutes(api, (WebRoute *[]){
		&(WebRoute){
			.Name 		= "index",
			.Path 		= "/",
			.Handler 	= IndexHandler,
			.Generator 	= LayoutInit
		},
		NULL
	});

	printf("Loaded %ld Routes...!\n", api->CFG.RouteCount);
	api->Run(api, 999, NULL);

	char *BUFFER[1024];
	fgets((char *)&BUFFER, 1024, stdin);

	api->Destruct(api);
	return 0;
}
